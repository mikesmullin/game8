#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i assets\shaders\atlas.glsl -o assets\shaders\atlas.glsl.h -l hlsl5:glsl430

    Overview:
    =========
    Shader program: 'atlas':
        Get shader desc: atlas_shader_desc(sg_query_backend());
        Vertex shader: vs
            Attributes:
                ATTR_vs_aPos => 0
                ATTR_vs_aTexCoord => 1
            Uniform block 'vs_params':
                C struct: vs_params_t
                Bind slot: SLOT_vs_params => 0
        Fragment shader: fs
            Uniform block 'fs_params':
                C struct: fs_params_t
                Bind slot: SLOT_fs_params => 0
            Image '_texture1':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT__texture1 => 0
            Sampler 'texture1_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_texture1_smp => 0
            Image Sampler Pair '_texture1_texture1_smp':
                Image: _texture1
                Sampler: texture1_smp
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before atlas.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_vs_aPos (0)
#define ATTR_vs_aTexCoord (1)
#define SLOT_vs_params (0)
#define SLOT_fs_params (0)
#define SLOT__texture1 (0)
#define SLOT_texture1_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    HMM_Mat4 model;
    HMM_Mat4 view;
    HMM_Mat4 projection;
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    int ti;
    int tw;
    int th;
    int aw;
    int ah;
    int useMask;
    int mask;
    int color;
} fs_params_t;
#pragma pack(pop)
/*
    #version 430

    uniform vec4 vs_params[12];
    layout(location = 0) in vec3 aPos;
    layout(location = 0) out vec2 TexCoord;
    layout(location = 1) in vec2 aTexCoord;

    void main()
    {
        gl_Position = ((mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7])) * mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3])) * vec4(aPos, 1.0);
        TexCoord = aTexCoord;
    }

*/
static const uint8_t vs_source_glsl430[432] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x28,
    0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,
    0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,0x29,0x20,0x2a,
    0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,
    0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x29,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    #version 430

    uniform ivec4 fs_params[2];
    layout(binding = 0) uniform sampler2D _texture1_texture1_smp;

    layout(location = 0) in vec2 TexCoord;
    layout(location = 0) out vec4 FragColor;

    uint vec4ToU32(vec4 color)
    {
        return (((uint(color.w * 255.0) << uint(24)) | (uint(color.z * 255.0) << uint(16))) | (uint(color.y * 255.0) << uint(8))) | uint(color.x * 255.0);
    }

    vec4 u32ToVec4(uint color)
    {
        return vec4(float(color & 255u) * 0.0039215688593685626983642578125, float((color >> uint(8)) & 255u) * 0.0039215688593685626983642578125, float((color >> uint(16)) & 255u) * 0.0039215688593685626983642578125, float((color >> uint(24)) & 255u) * 0.0039215688593685626983642578125);
    }

    vec4 alphaBlend(vec4 color1, vec4 color2)
    {
        float _109 = 1.0 - color1.w;
        return vec4((color1.xyz * color1.w) + (color2.xyz * _109), fma(color2.w, _109, color1.w));
    }

    void main()
    {
        int _137 = fs_params[0].x * fs_params[0].y;
        uint _142 = uint(_137 % fs_params[0].w);
        uint _156 = uint((_137 / fs_params[0].w) * fs_params[0].z);
        float _164 = float(fs_params[0].w);
        float _171 = float(fs_params[1].x);
        vec4 _215 = texture(_texture1_texture1_smp, mix(vec2(float(_142) / _164, float(_156) / _171), vec2(float(_142 + uint(fs_params[0].y)) / _164, float(_156 + uint(fs_params[0].z)) / _171), TexCoord));
        vec4 col = _215;
        vec4 param = _215;
        uint param_1 = uint(fs_params[1].w);
        bool _231 = 1 == fs_params[1].y;
        bool _240;
        if (_231)
        {
            _240 = vec4ToU32(param) == uint(fs_params[1].z);
        }
        else
        {
            _240 = _231;
        }
        if (_240)
        {
            col = vec4(0.0);
        }
        else
        {
            vec4 param_2 = u32ToVec4(param_1);
            vec4 param_3 = col;
            col = alphaBlend(param_2, param_3);
        }
        FragColor = col;
    }

*/
static const uint8_t fs_source_glsl430[1789] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x29,0x20,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x31,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,0x76,
    0x65,0x63,0x34,0x54,0x6f,0x55,0x33,0x32,0x28,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x28,0x28,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,
    0x77,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x29,0x20,0x3c,0x3c,0x20,0x75,0x69,
    0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x7c,0x20,0x28,0x75,0x69,0x6e,0x74,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x29,
    0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,0x29,0x29,0x29,0x20,0x7c,
    0x20,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,0x20,0x2a,
    0x20,0x32,0x35,0x35,0x2e,0x30,0x29,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,
    0x38,0x29,0x29,0x29,0x20,0x7c,0x20,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x78,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x76,0x65,0x63,0x34,0x20,0x75,0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,
    0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,
    0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,
    0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,
    0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,
    0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x31,0x36,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,
    0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,
    0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,
    0x32,0x35,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x26,0x20,
    0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,
    0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,
    0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,
    0x65,0x63,0x34,0x20,0x61,0x6c,0x70,0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,0x76,
    0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2c,0x20,0x76,0x65,0x63,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x39,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x31,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,
    0x2e,0x77,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x5f,0x31,0x30,0x39,0x29,0x2c,0x20,0x66,0x6d,0x61,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x77,0x2c,0x20,0x5f,0x31,0x30,0x39,0x2c,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x5f,0x31,0x33,0x37,0x20,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x5f,0x31,0x34,0x32,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,
    0x28,0x5f,0x31,0x33,0x37,0x20,0x25,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x20,0x5f,0x31,0x35,0x36,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x28,0x5f,
    0x31,0x33,0x37,0x20,0x2f,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x30,0x5d,0x2e,0x77,0x29,0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x36,0x34,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x31,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x32,0x31,0x35,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x31,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,
    0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x32,0x29,0x20,0x2f,0x20,
    0x5f,0x31,0x36,0x34,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x35,0x36,
    0x29,0x20,0x2f,0x20,0x5f,0x31,0x37,0x31,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x32,0x20,0x2b,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,
    0x29,0x29,0x20,0x2f,0x20,0x5f,0x31,0x36,0x34,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x5f,0x31,0x35,0x36,0x20,0x2b,0x20,0x75,0x69,0x6e,0x74,0x28,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x29,0x20,0x2f,0x20,
    0x5f,0x31,0x37,0x31,0x29,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x20,
    0x3d,0x20,0x5f,0x32,0x31,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x32,0x31,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,
    0x20,0x5f,0x32,0x33,0x31,0x20,0x3d,0x20,0x31,0x20,0x3d,0x3d,0x20,0x66,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x32,0x34,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x32,0x33,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x54,0x6f,0x55,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,
    0x3d,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,0x20,0x5f,0x32,0x33,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x32,0x34,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x75,0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x63,0x6f,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x20,0x3d,0x20,
    0x61,0x6c,0x70,0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer vs_params : register(b0)
    {
        row_major float4x4 _19_model : packoffset(c0);
        row_major float4x4 _19_view : packoffset(c4);
        row_major float4x4 _19_projection : packoffset(c8);
    };


    static float4 gl_Position;
    static float3 aPos;
    static float2 TexCoord;
    static float2 aTexCoord;

    struct SPIRV_Cross_Input
    {
        float3 aPos : TEXCOORD0;
        float2 aTexCoord : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float2 TexCoord : TEXCOORD0;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        gl_Position = mul(float4(aPos, 1.0f), mul(_19_model, mul(_19_view, _19_projection)));
        TexCoord = aTexCoord;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        aPos = stage_input.aPos;
        aTexCoord = stage_input.aTexCoord;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.TexCoord = TexCoord;
        return stage_output;
    }
*/
static const uint8_t vs_source_hlsl5[918] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x39,0x5f,0x6d,0x6f,
    0x64,0x65,0x6c,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,
    0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x39,
    0x5f,0x76,0x69,0x65,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,
    0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,
    0x31,0x39,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,
    0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x29,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x50,
    0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x50,0x6f,0x73,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,
    0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x61,0x50,0x6f,0x73,0x2c,
    0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x31,0x39,0x5f,
    0x6d,0x6f,0x64,0x65,0x6c,0x2c,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x31,0x39,0x5f,0x76,
    0x69,0x65,0x77,0x2c,0x20,0x5f,0x31,0x39,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,
    0x69,0x6f,0x6e,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x61,0x50,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,
    0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer fs_params : register(b0)
    {
        int _129_ti : packoffset(c0);
        int _129_tw : packoffset(c0.y);
        int _129_th : packoffset(c0.z);
        int _129_aw : packoffset(c0.w);
        int _129_ah : packoffset(c1);
        int _129_useMask : packoffset(c1.y);
        int _129_mask : packoffset(c1.z);
        int _129_color : packoffset(c1.w);
    };

    Texture2D<float4> _texture1 : register(t0);
    SamplerState texture1_smp : register(s0);

    static float2 TexCoord;
    static float4 FragColor;

    struct SPIRV_Cross_Input
    {
        float2 TexCoord : TEXCOORD0;
    };

    struct SPIRV_Cross_Output
    {
        float4 FragColor : SV_Target0;
    };

    uint vec4ToU32(float4 color)
    {
        return (((uint(color.w * 255.0f) << uint(24)) | (uint(color.z * 255.0f) << uint(16))) | (uint(color.y * 255.0f) << uint(8))) | uint(color.x * 255.0f);
    }

    float4 u32ToVec4(uint color)
    {
        return float4(float(color & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(8)) & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(16)) & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(24)) & 255u) * 0.0039215688593685626983642578125f);
    }

    float4 alphaBlend(float4 color1, float4 color2)
    {
        float _109 = 1.0f - color1.w;
        return float4((color1.xyz * color1.w) + (color2.xyz * _109), mad(color2.w, _109, color1.w));
    }

    void frag_main()
    {
        int _137 = _129_ti * _129_tw;
        uint _142 = uint(_137 % _129_aw);
        uint _156 = uint((_137 / _129_aw) * _129_th);
        float _164 = float(_129_aw);
        float _171 = float(_129_ah);
        float4 _215 = _texture1.Sample(texture1_smp, lerp(float2(float(_142) / _164, float(_156) / _171), float2(float(_142 + uint(_129_tw)) / _164, float(_156 + uint(_129_th)) / _171), TexCoord));
        float4 col = _215;
        float4 param = _215;
        uint param_1 = uint(_129_color);
        bool _231 = 1 == _129_useMask;
        bool _240;
        if (_231)
        {
            _240 = vec4ToU32(param) == uint(_129_mask);
        }
        else
        {
            _240 = _231;
        }
        if (_240)
        {
            col = 0.0f.xxxx;
        }
        else
        {
            float4 param_2 = u32ToVec4(param_1);
            float4 param_3 = col;
            col = alphaBlend(param_2, param_3);
        }
        FragColor = col;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        TexCoord = stage_input.TexCoord;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.FragColor = FragColor;
        return stage_output;
    }
*/
static const uint8_t fs_source_hlsl5[2387] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x39,0x5f,
    0x74,0x69,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,
    0x39,0x5f,0x74,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x30,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x5f,0x31,0x32,0x39,0x5f,0x74,0x68,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x39,0x5f,0x61,0x77,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x77,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x39,0x5f,0x61,0x68,
    0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x39,0x5f,
    0x75,0x73,0x65,0x4d,0x61,0x73,0x6b,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x39,0x5f,0x6d,0x61,0x73,0x6b,0x20,0x3a,0x20,
    0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x2e,0x7a,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x32,0x39,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,
    0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x53,0x74,0x61,0x74,0x65,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,0x73,
    0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,
    0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,
    0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,0x76,0x65,
    0x63,0x34,0x54,0x6f,0x55,0x33,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x28,0x28,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x66,0x29,0x20,0x3c,0x3c,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x7c,0x20,0x28,0x75,0x69,0x6e,
    0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,
    0x30,0x66,0x29,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,0x29,0x29,
    0x29,0x20,0x7c,0x20,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,
    0x79,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x66,0x29,0x20,0x3c,0x3c,0x20,0x75,
    0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x29,0x20,0x7c,0x20,0x75,0x69,0x6e,0x74,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x66,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,0x33,0x32,
    0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,
    0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,
    0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,
    0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,
    0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,0x29,
    0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,
    0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,
    0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,
    0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,
    0x37,0x38,0x31,0x32,0x35,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x61,0x6c,0x70,0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x39,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x66,0x20,0x2d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x29,0x20,0x2b,0x20,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x32,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x31,0x30,0x39,0x29,0x2c,
    0x20,0x6d,0x61,0x64,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x77,0x2c,0x20,0x5f,
    0x31,0x30,0x39,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x29,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x31,0x33,0x37,0x20,0x3d,0x20,0x5f,0x31,0x32,0x39,0x5f,0x74,0x69,0x20,0x2a,0x20,
    0x5f,0x31,0x32,0x39,0x5f,0x74,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x20,0x5f,0x31,0x34,0x32,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,
    0x33,0x37,0x20,0x25,0x20,0x5f,0x31,0x32,0x39,0x5f,0x61,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x31,0x35,0x36,0x20,0x3d,0x20,0x75,
    0x69,0x6e,0x74,0x28,0x28,0x5f,0x31,0x33,0x37,0x20,0x2f,0x20,0x5f,0x31,0x32,0x39,
    0x5f,0x61,0x77,0x29,0x20,0x2a,0x20,0x5f,0x31,0x32,0x39,0x5f,0x74,0x68,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x34,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x32,0x39,0x5f,0x61,0x77,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x31,
    0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x32,0x39,0x5f,0x61,0x68,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,
    0x31,0x35,0x20,0x3d,0x20,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x2e,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,0x73,
    0x6d,0x70,0x2c,0x20,0x6c,0x65,0x72,0x70,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x32,0x29,0x20,0x2f,0x20,0x5f,0x31,
    0x36,0x34,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x35,0x36,0x29,0x20,
    0x2f,0x20,0x5f,0x31,0x37,0x31,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x32,0x20,0x2b,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x5f,0x31,0x32,0x39,0x5f,0x74,0x77,0x29,0x29,0x20,0x2f,0x20,0x5f,0x31,
    0x36,0x34,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x35,0x36,0x20,0x2b,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x32,0x39,0x5f,0x74,0x68,0x29,0x29,0x20,
    0x2f,0x20,0x5f,0x31,0x37,0x31,0x29,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x20,0x3d,0x20,0x5f,0x32,0x31,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,
    0x32,0x31,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x32,
    0x39,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x6f,0x6c,0x20,0x5f,0x32,0x33,0x31,0x20,0x3d,0x20,0x31,0x20,0x3d,0x3d,0x20,0x5f,
    0x31,0x32,0x39,0x5f,0x75,0x73,0x65,0x4d,0x61,0x73,0x6b,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x32,0x34,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x32,0x33,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x54,0x6f,0x55,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,
    0x3d,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x32,0x39,0x5f,0x6d,0x61,0x73,
    0x6b,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,
    0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,0x20,0x5f,0x32,0x33,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x32,0x34,0x30,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x20,0x3d,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x75,
    0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x61,
    0x6c,0x70,0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x63,0x6f,0x6c,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,
    0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x54,
    0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x7d,0x0a,0x00,
};
static inline const sg_shader_desc* atlas_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].name = "aPos";
            desc.attrs[1].name = "aTexCoord";
            desc.vs.source = (const char*)vs_source_glsl430;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
            desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
            desc.fs.source = (const char*)fs_source_glsl430;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 32;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
            desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_INT4;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[0].glsl_name = "_texture1_texture1_smp";
            desc.label = "atlas_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].sem_name = "TEXCOORD";
            desc.attrs[0].sem_index = 0;
            desc.attrs[1].sem_name = "TEXCOORD";
            desc.attrs[1].sem_index = 1;
            desc.vs.source = (const char*)vs_source_hlsl5;
            desc.vs.d3d11_target = "vs_5_0";
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 192;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_hlsl5;
            desc.fs.d3d11_target = "ps_5_0";
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 32;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "atlas_shader";
        }
        return &desc;
    }
    return 0;
}
