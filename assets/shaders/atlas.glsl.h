#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i assets\shaders\atlas.glsl -o assets\shaders\atlas.glsl.h -l hlsl5:glsl430

    Overview:
    =========
    Shader program: 'atlas':
        Get shader desc: atlas_shader_desc(sg_query_backend());
        Vertex shader: vs
            Attributes:
                ATTR_vs_aPos => 0
                ATTR_vs_aTexCoord => 1
            Uniform block 'vs_params':
                C struct: vs_params_t
                Bind slot: SLOT_vs_params => 0
        Fragment shader: fs
            Uniform block 'fs_params':
                C struct: fs_params_t
                Bind slot: SLOT_fs_params => 0
            Image '_texture1':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT__texture1 => 0
            Sampler 'texture1_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_texture1_smp => 0
            Image Sampler Pair '_texture1_texture1_smp':
                Image: _texture1
                Sampler: texture1_smp
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before atlas.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_vs_aPos (0)
#define ATTR_vs_aTexCoord (1)
#define SLOT_vs_params (0)
#define SLOT_fs_params (0)
#define SLOT__texture1 (0)
#define SLOT_texture1_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    HMM_Mat4 view;
    HMM_Mat4 projection;
    int billboard;
    uint8_t _pad_132[12];
    float camPos[3];
    uint8_t _pad_156[4];
    HMM_Mat4 models[128];
    int batch[128][4];
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    int tw;
    int th;
    int aw;
    int ah;
    int useMask;
    int mask;
    uint8_t _pad_24[8];
} fs_params_t;
#pragma pack(pop)
/*
    #version 430

    struct vs_params
    {
        mat4 view;
        mat4 projection;
        int billboard;
        vec3 camPos;
        mat4 models[128];
        ivec4 batch[128];
    };

    uniform vs_params _20;

    layout(location = 0) flat out ivec4 inst;
    layout(location = 0) in vec3 aPos;
    layout(location = 1) out vec2 TexCoord;
    layout(location = 1) in vec2 aTexCoord;

    void main()
    {
        inst = _20.batch[gl_InstanceID];
        vec3 position = aPos;
        if (_20.billboard == 1)
        {
            vec3 _66 = normalize(_20.camPos - (-_20.models[gl_InstanceID][3].xyz));
            _66.y = 0.0;
            vec3 _72 = normalize(_66);
            position = (mat4(vec4(normalize(cross(vec3(0.0, 1.0, 0.0), _72)), 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_72, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * vec4(position, 1.0)).xyz;
        }
        gl_Position = ((_20.projection * _20.view) * _20.models[gl_InstanceID]) * vec4(position, 1.0);
        TexCoord = aTexCoord;
    }

*/
static const uint8_t vs_source_glsl430[893] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x76,0x69,0x65,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x62,0x69,0x6c,
    0x6c,0x62,0x6f,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x63,0x61,0x6d,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,
    0x34,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x31,0x32,0x38,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x62,0x61,0x74,0x63,0x68,0x5b,0x31,
    0x32,0x38,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x32,0x30,0x3b,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,0x74,0x20,0x69,
    0x76,0x65,0x63,0x34,0x20,0x69,0x6e,0x73,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x32,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x73,0x74,0x20,0x3d,0x20,0x5f,0x32,0x30,0x2e,0x62,0x61,0x74,0x63,
    0x68,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x32,0x30,0x2e,0x62,0x69,0x6c,0x6c,0x62,0x6f,0x61,0x72,
    0x64,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x36,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x30,0x2e,0x63,
    0x61,0x6d,0x50,0x6f,0x73,0x20,0x2d,0x20,0x28,0x2d,0x5f,0x32,0x30,0x2e,0x6d,0x6f,
    0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x49,0x44,0x5d,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x36,0x2e,0x79,0x20,0x3d,0x20,0x30,0x2e,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x37,0x32,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x36,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,
    0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x63,0x72,
    0x6f,0x73,0x73,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x5f,0x37,0x32,0x29,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x34,0x28,0x5f,0x37,0x32,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,
    0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x28,
    0x5f,0x32,0x30,0x2e,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x2a,
    0x20,0x5f,0x32,0x30,0x2e,0x76,0x69,0x65,0x77,0x29,0x20,0x2a,0x20,0x5f,0x32,0x30,
    0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,
    0x6e,0x63,0x65,0x49,0x44,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x61,0x54,
    0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    uniform ivec4 fs_params[2];
    layout(binding = 0) uniform sampler2D _texture1_texture1_smp;

    layout(location = 0) flat in ivec4 inst;
    layout(location = 1) in vec2 TexCoord;
    layout(location = 0) out vec4 FragColor;

    uint vec4ToU32(vec4 color)
    {
        return (((uint(color.w * 255.0) << uint(24)) | (uint(color.z * 255.0) << uint(16))) | (uint(color.y * 255.0) << uint(8))) | uint(color.x * 255.0);
    }

    vec4 u32ToVec4(uint color)
    {
        return vec4(float(color & 255u) * 0.0039215688593685626983642578125, float((color >> uint(8)) & 255u) * 0.0039215688593685626983642578125, float((color >> uint(16)) & 255u) * 0.0039215688593685626983642578125, float((color >> uint(24)) & 255u) * 0.0039215688593685626983642578125);
    }

    vec4 alphaBlend(vec4 color1, vec4 color2)
    {
        float _109 = 1.0 - color1.w;
        return vec4((color1.xyz * color1.w) + (color2.xyz * _109), fma(color2.w, _109, color1.w));
    }

    void main()
    {
        uint _148 = uint(inst.x) * uint(fs_params[0].x);
        uint _152 = uint(fs_params[0].z);
        float _154 = float(_148 % _152);
        float _170 = float((_148 / _152) * uint(fs_params[0].y));
        float _177 = float(fs_params[0].z);
        float _183 = float(fs_params[0].w);
        vec4 _225 = texture(_texture1_texture1_smp, mix(vec2(_154 / _177, _170 / _183), vec2((_154 + float(fs_params[0].x)) / _177, (_170 + float(fs_params[0].y)) / _183), TexCoord));
        vec4 col = _225;
        vec4 param = _225;
        uint param_1 = uint(inst.y);
        bool _238 = 1 == fs_params[1].x;
        bool _247;
        if (_238)
        {
            _247 = vec4ToU32(param) == uint(fs_params[1].y);
        }
        else
        {
            _247 = _238;
        }
        if (_247)
        {
            col = vec4(0.0);
        }
        else
        {
            vec4 param_2 = u32ToVec4(param_1);
            vec4 param_3 = col;
            col = alphaBlend(param_2, param_3);
        }
        FragColor = col;
    }

*/
static const uint8_t fs_source_glsl430[1833] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x29,0x20,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x31,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x66,0x6c,
    0x61,0x74,0x20,0x69,0x6e,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x69,0x6e,0x73,0x74,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x54,
    0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,0x76,0x65,0x63,0x34,0x54,0x6f,0x55,0x33,
    0x32,0x28,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x28,0x75,0x69,
    0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x32,0x35,0x35,
    0x2e,0x30,0x29,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,
    0x20,0x7c,0x20,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,
    0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x29,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x31,0x36,0x29,0x29,0x29,0x20,0x7c,0x20,0x28,0x75,0x69,0x6e,0x74,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x79,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x29,
    0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x29,0x20,0x7c,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x2a,0x20,0x32,
    0x35,0x35,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x75,
    0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,
    0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,
    0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,
    0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,
    0x38,0x31,0x32,0x35,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,0x29,0x29,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,
    0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,
    0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,
    0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,
    0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,
    0x32,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x61,0x6c,0x70,
    0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x31,0x2c,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x32,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x30,0x39,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x31,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x29,0x20,0x2b,0x20,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x31,0x30,
    0x39,0x29,0x2c,0x20,0x66,0x6d,0x61,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x77,
    0x2c,0x20,0x5f,0x31,0x30,0x39,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,
    0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x31,
    0x34,0x38,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x69,0x6e,0x73,0x74,0x2e,0x78,
    0x29,0x20,0x2a,0x20,0x75,0x69,0x6e,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x5f,0x31,0x35,0x32,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x35,0x34,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x38,0x20,0x25,0x20,0x5f,0x31,
    0x35,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x37,0x30,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x31,0x34,
    0x38,0x20,0x2f,0x20,0x5f,0x31,0x35,0x32,0x29,0x20,0x2a,0x20,0x75,0x69,0x6e,0x74,
    0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,
    0x37,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x32,0x35,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x31,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,0x73,0x6d,
    0x70,0x2c,0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x35,0x34,
    0x20,0x2f,0x20,0x5f,0x31,0x37,0x37,0x2c,0x20,0x5f,0x31,0x37,0x30,0x20,0x2f,0x20,
    0x5f,0x31,0x38,0x33,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x28,0x5f,0x31,0x35,
    0x34,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x29,0x20,0x2f,0x20,0x5f,0x31,0x37,
    0x37,0x2c,0x20,0x28,0x5f,0x31,0x37,0x30,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,
    0x29,0x20,0x2f,0x20,0x5f,0x31,0x38,0x33,0x29,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,
    0x6f,0x72,0x64,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x63,0x6f,0x6c,0x20,0x3d,0x20,0x5f,0x32,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x32,0x32,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x69,0x6e,0x73,0x74,0x2e,
    0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x32,0x33,
    0x38,0x20,0x3d,0x20,0x31,0x20,0x3d,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,
    0x6c,0x20,0x5f,0x32,0x34,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x32,0x33,0x38,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x32,0x34,0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x54,
    0x6f,0x55,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x3d,0x3d,0x20,0x75,
    0x69,0x6e,0x74,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,
    0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,
    0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x32,0x34,0x37,0x20,0x3d,0x20,0x5f,0x32,0x33,0x38,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x32,0x34,
    0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x75,0x33,
    0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x61,0x6c,0x70,0x68,
    0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x63,0x6f,0x6c,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer vs_params : register(b0)
    {
        row_major float4x4 _20_view : packoffset(c0);
        row_major float4x4 _20_projection : packoffset(c4);
        int _20_billboard : packoffset(c8);
        float3 _20_camPos : packoffset(c9);
        row_major float4x4 _20_models[128] : packoffset(c10);
        int4 _20_batch[128] : packoffset(c522);
    };


    static float4 gl_Position;
    static int gl_InstanceIndex;
    static int4 inst;
    static float3 aPos;
    static float2 TexCoord;
    static float2 aTexCoord;

    struct SPIRV_Cross_Input
    {
        float3 aPos : TEXCOORD0;
        float2 aTexCoord : TEXCOORD1;
        uint gl_InstanceIndex : SV_InstanceID;
    };

    struct SPIRV_Cross_Output
    {
        nointerpolation int4 inst : TEXCOORD0;
        float2 TexCoord : TEXCOORD1;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        inst = _20_batch[gl_InstanceIndex];
        float3 position = aPos;
        if (_20_billboard == 1)
        {
            float3 _66 = normalize(_20_camPos - (-_20_models[gl_InstanceIndex][3].xyz));
            _66.y = 0.0f;
            float3 _72 = normalize(_66);
            position = mul(float4(position, 1.0f), float4x4(float4(normalize(cross(float3(0.0f, 1.0f, 0.0f), _72)), 0.0f), float4(0.0f, 1.0f, 0.0f, 0.0f), float4(_72, 0.0f), float4(0.0f, 0.0f, 0.0f, 1.0f))).xyz;
        }
        gl_Position = mul(float4(position, 1.0f), mul(_20_models[gl_InstanceIndex], mul(_20_view, _20_projection)));
        TexCoord = aTexCoord;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        gl_InstanceIndex = int(stage_input.gl_InstanceIndex);
        aPos = stage_input.aPos;
        aTexCoord = stage_input.aTexCoord;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.inst = inst;
        stage_output.TexCoord = TexCoord;
        return stage_output;
    }
*/
static const uint8_t vs_source_hlsl5[1753] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x30,0x5f,0x76,0x69,
    0x65,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,
    0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x32,0x30,0x5f,
    0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,0x5f,0x62,0x69,0x6c,0x6c,0x62,0x6f,0x61,
    0x72,0x64,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x5f,0x32,0x30,0x5f,0x63,0x61,0x6d,0x50,0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x20,0x5f,0x32,0x30,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x31,
    0x32,0x38,0x5d,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x34,0x20,
    0x5f,0x32,0x30,0x5f,0x62,0x61,0x74,0x63,0x68,0x5b,0x31,0x32,0x38,0x5d,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x35,0x32,0x32,
    0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x74,0x20,0x67,0x6c,
    0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x74,0x34,0x20,0x69,0x6e,0x73,0x74,
    0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x61,0x50,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x54,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x61,0x50,
    0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x61,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x49,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x53,0x56,
    0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x6e,0x6f,0x69,0x6e,0x74,0x65,0x72,0x70,0x6f,0x6c,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x69,0x6e,0x74,0x34,0x20,0x69,0x6e,0x73,0x74,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x73,0x74,0x20,0x3d,
    0x20,0x5f,0x32,0x30,0x5f,0x62,0x61,0x74,0x63,0x68,0x5b,0x67,0x6c,0x5f,0x49,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5d,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x61,0x50,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x32,0x30,0x5f,0x62,0x69,0x6c,0x6c,0x62,0x6f,0x61,0x72,0x64,0x20,
    0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x36,0x36,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x30,0x5f,0x63,
    0x61,0x6d,0x50,0x6f,0x73,0x20,0x2d,0x20,0x28,0x2d,0x5f,0x32,0x30,0x5f,0x6d,0x6f,
    0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x49,0x6e,0x64,0x65,0x78,0x5d,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x36,0x2e,0x79,0x20,0x3d,
    0x20,0x30,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x37,0x32,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x36,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,
    0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x78,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x63,0x72,0x6f,0x73,0x73,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x29,0x2c,0x20,0x5f,0x37,0x32,0x29,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,
    0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x37,0x32,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,0x30,
    0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,
    0x2e,0x30,0x66,0x29,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,
    0x6d,0x75,0x6c,0x28,0x5f,0x32,0x30,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,
    0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5d,
    0x2c,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x32,0x30,0x5f,0x76,0x69,0x65,0x77,0x2c,0x20,
    0x5f,0x32,0x30,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x29,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,
    0x3d,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,
    0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,
    0x69,0x6e,0x74,0x28,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x50,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x50,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x61,0x54,0x65,0x78,
    0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x69,0x6e,0x73,0x74,0x20,0x3d,
    0x20,0x69,0x6e,0x73,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,
    0x20,0x3d,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer fs_params : register(b0)
    {
        int _142_tw : packoffset(c0);
        int _142_th : packoffset(c0.y);
        int _142_aw : packoffset(c0.z);
        int _142_ah : packoffset(c0.w);
        int _142_useMask : packoffset(c1);
        int _142_mask : packoffset(c1.y);
    };

    Texture2D<float4> _texture1 : register(t0);
    SamplerState texture1_smp : register(s0);

    static int4 inst;
    static float2 TexCoord;
    static float4 FragColor;

    struct SPIRV_Cross_Input
    {
        nointerpolation int4 inst : TEXCOORD0;
        float2 TexCoord : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float4 FragColor : SV_Target0;
    };

    uint vec4ToU32(float4 color)
    {
        return (((uint(color.w * 255.0f) << uint(24)) | (uint(color.z * 255.0f) << uint(16))) | (uint(color.y * 255.0f) << uint(8))) | uint(color.x * 255.0f);
    }

    float4 u32ToVec4(uint color)
    {
        return float4(float(color & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(8)) & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(16)) & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(24)) & 255u) * 0.0039215688593685626983642578125f);
    }

    float4 alphaBlend(float4 color1, float4 color2)
    {
        float _109 = 1.0f - color1.w;
        return float4((color1.xyz * color1.w) + (color2.xyz * _109), mad(color2.w, _109, color1.w));
    }

    void frag_main()
    {
        uint _148 = uint(inst.x) * uint(_142_tw);
        uint _152 = uint(_142_aw);
        float _154 = float(_148 % _152);
        float _170 = float((_148 / _152) * uint(_142_th));
        float _177 = float(_142_aw);
        float _183 = float(_142_ah);
        float4 _225 = _texture1.Sample(texture1_smp, lerp(float2(_154 / _177, _170 / _183), float2((_154 + float(_142_tw)) / _177, (_170 + float(_142_th)) / _183), TexCoord));
        float4 col = _225;
        float4 param = _225;
        uint param_1 = uint(inst.y);
        bool _238 = 1 == _142_useMask;
        bool _247;
        if (_238)
        {
            _247 = vec4ToU32(param) == uint(_142_mask);
        }
        else
        {
            _247 = _238;
        }
        if (_247)
        {
            col = 0.0f.xxxx;
        }
        else
        {
            float4 param_2 = u32ToVec4(param_1);
            float4 param_3 = col;
            col = alphaBlend(param_2, param_3);
        }
        FragColor = col;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        inst = stage_input.inst;
        TexCoord = stage_input.TexCoord;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.FragColor = FragColor;
        return stage_output;
    }
*/
static const uint8_t fs_source_hlsl5[2423] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x34,0x32,0x5f,
    0x74,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x34,
    0x32,0x5f,0x74,0x68,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x30,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x5f,0x31,0x34,0x32,0x5f,0x61,0x77,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x34,0x32,0x5f,0x61,0x68,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x77,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x34,0x32,0x5f,0x75,0x73,
    0x65,0x4d,0x61,0x73,0x6b,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x34,0x32,0x5f,0x6d,0x61,0x73,0x6b,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x3e,0x20,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x31,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,
    0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x69,0x6e,0x74,0x34,0x20,0x69,0x6e,0x73,0x74,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,0x69,0x6e,
    0x74,0x65,0x72,0x70,0x6f,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x74,0x34,
    0x20,0x69,0x6e,0x73,0x74,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x54,0x65,
    0x78,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,
    0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,
    0x76,0x65,0x63,0x34,0x54,0x6f,0x55,0x33,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,
    0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x66,0x29,0x20,0x3c,
    0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x7c,0x20,0x28,0x75,
    0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x2a,0x20,0x32,0x35,
    0x35,0x2e,0x30,0x66,0x29,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,
    0x29,0x29,0x29,0x20,0x7c,0x20,0x28,0x75,0x69,0x6e,0x74,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x79,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,0x30,0x66,0x29,0x20,0x3c,0x3c,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x29,0x20,0x7c,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x20,0x2a,0x20,0x32,0x35,0x35,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,
    0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,
    0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,
    0x66,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x20,0x26,0x20,0x32,0x35,
    0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,
    0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,
    0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,
    0x36,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,
    0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,
    0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,
    0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x26,0x20,0x32,0x35,
    0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,
    0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,
    0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x61,0x6c,0x70,0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x39,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x29,0x20,0x2b,0x20,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,0x31,0x30,0x39,
    0x29,0x2c,0x20,0x6d,0x61,0x64,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x2e,0x77,0x2c,
    0x20,0x5f,0x31,0x30,0x39,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x2e,0x77,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x20,0x5f,0x31,0x34,0x38,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x69,0x6e,
    0x73,0x74,0x2e,0x78,0x29,0x20,0x2a,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x34,
    0x32,0x5f,0x74,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x35,0x32,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x34,0x32,
    0x5f,0x61,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x35,0x34,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,
    0x38,0x20,0x25,0x20,0x5f,0x31,0x35,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x30,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x28,0x5f,0x31,0x34,0x38,0x20,0x2f,0x20,0x5f,0x31,0x35,0x32,0x29,0x20,
    0x2a,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x34,0x32,0x5f,0x74,0x68,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x37,0x37,
    0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x32,0x5f,0x61,0x77,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,
    0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x31,0x34,0x32,0x5f,0x61,
    0x68,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x32,0x32,0x35,0x20,0x3d,0x20,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x2e,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x31,0x5f,
    0x73,0x6d,0x70,0x2c,0x20,0x6c,0x65,0x72,0x70,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x28,0x5f,0x31,0x35,0x34,0x20,0x2f,0x20,0x5f,0x31,0x37,0x37,0x2c,0x20,0x5f,0x31,
    0x37,0x30,0x20,0x2f,0x20,0x5f,0x31,0x38,0x33,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x28,0x5f,0x31,0x35,0x34,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x5f,0x31,0x34,0x32,0x5f,0x74,0x77,0x29,0x29,0x20,0x2f,0x20,0x5f,0x31,0x37,
    0x37,0x2c,0x20,0x28,0x5f,0x31,0x37,0x30,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x5f,0x31,0x34,0x32,0x5f,0x74,0x68,0x29,0x29,0x20,0x2f,0x20,0x5f,0x31,0x38,
    0x33,0x29,0x2c,0x20,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x20,0x3d,
    0x20,0x5f,0x32,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x5f,0x32,0x32,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x69,0x6e,0x73,0x74,0x2e,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,
    0x20,0x31,0x20,0x3d,0x3d,0x20,0x5f,0x31,0x34,0x32,0x5f,0x75,0x73,0x65,0x4d,0x61,
    0x73,0x6b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x32,0x34,
    0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x32,0x33,0x38,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x32,0x34,0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x54,0x6f,0x55,0x33,0x32,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x3d,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,
    0x31,0x34,0x32,0x5f,0x6d,0x61,0x73,0x6b,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x34,0x37,0x20,0x3d,0x20,0x5f,
    0x32,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x32,0x34,0x37,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x66,0x2e,0x78,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x20,0x3d,0x20,0x75,0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x20,0x3d,0x20,0x63,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x20,0x3d,0x20,0x61,0x6c,0x70,0x68,0x61,0x42,0x6c,0x65,0x6e,0x64,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x73,0x74,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x69,0x6e,0x73,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x54,0x65,0x78,0x43,
    0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x54,0x65,0x78,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
static inline const sg_shader_desc* atlas_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].name = "aPos";
            desc.attrs[1].name = "aTexCoord";
            desc.vs.source = (const char*)vs_source_glsl430;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 10400;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.vs.uniform_blocks[0].uniforms[0].name = "_20.view";
            desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 0;
            desc.vs.uniform_blocks[0].uniforms[1].name = "_20.projection";
            desc.vs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_MAT4;
            desc.vs.uniform_blocks[0].uniforms[1].array_count = 0;
            desc.vs.uniform_blocks[0].uniforms[2].name = "_20.billboard";
            desc.vs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_INT;
            desc.vs.uniform_blocks[0].uniforms[2].array_count = 0;
            desc.vs.uniform_blocks[0].uniforms[3].name = "_20.camPos";
            desc.vs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_FLOAT3;
            desc.vs.uniform_blocks[0].uniforms[3].array_count = 0;
            desc.vs.uniform_blocks[0].uniforms[4].name = "_20.models";
            desc.vs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_MAT4;
            desc.vs.uniform_blocks[0].uniforms[4].array_count = 128;
            desc.vs.uniform_blocks[0].uniforms[5].name = "_20.batch";
            desc.vs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_INT4;
            desc.vs.uniform_blocks[0].uniforms[5].array_count = 128;
            desc.fs.source = (const char*)fs_source_glsl430;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 32;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
            desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_INT4;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[0].glsl_name = "_texture1_texture1_smp";
            desc.label = "atlas_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].sem_name = "TEXCOORD";
            desc.attrs[0].sem_index = 0;
            desc.attrs[1].sem_name = "TEXCOORD";
            desc.attrs[1].sem_index = 1;
            desc.vs.source = (const char*)vs_source_hlsl5;
            desc.vs.d3d11_target = "vs_5_0";
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 10400;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_hlsl5;
            desc.fs.d3d11_target = "ps_5_0";
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 32;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.label = "atlas_shader";
        }
        return &desc;
    }
    return 0;
}
