#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i assets\shaders\pbr.glsl -o assets\shaders\pbr.glsl.h -l hlsl5:glsl430

    Overview:
    =========
    Shader program: 'pbr':
        Get shader desc: pbr_shader_desc(sg_query_backend());
        Vertex shader: vs
            Attributes:
                ATTR_vs_position => 0
                ATTR_vs_normal => 1
                ATTR_vs_tangent => 2
                ATTR_vs_bitangent => 3
                ATTR_vs_texcoord => 4
            Uniform block 'TransformUniforms':
                C struct: TransformUniforms_t
                Bind slot: SLOT_TransformUniforms => 0
        Fragment shader: fs
            Uniform block 'ShadingUniforms':
                C struct: ShadingUniforms_t
                Bind slot: SLOT_ShadingUniforms => 0
            Image '_albedoTexture':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT__albedoTexture => 0
            Image 'metalnessTexture_tex':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_metalnessTexture_tex => 1
            Image 'roughnessTexture_tex':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_roughnessTexture_tex => 2
            Image 'normalTexture_tex':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_normalTexture_tex => 3
            Image 'irradianceTexture_tex':
                Image type: SG_IMAGETYPE_CUBE
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_irradianceTexture_tex => 4
            Image 'specularTexture_tex':
                Image type: SG_IMAGETYPE_CUBE
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_specularTexture_tex => 5
            Image 'specularBRDF_LUT_tex':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_specularBRDF_LUT_tex => 6
            Sampler 'albedoTexture_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_albedoTexture_smp => 0
            Sampler 'metalnessTexture_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_metalnessTexture_smp => 1
            Sampler 'roughnessTexture_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_roughnessTexture_smp => 2
            Sampler 'normalTexture_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_normalTexture_smp => 3
            Sampler 'irradianceTexture_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_irradianceTexture_smp => 4
            Sampler 'specularTexture_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_specularTexture_smp => 5
            Sampler 'specularBRDF_LUT_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_specularBRDF_LUT_smp => 6
            Image Sampler Pair '_albedoTexture_albedoTexture_smp':
                Image: _albedoTexture
                Sampler: albedoTexture_smp
            Image Sampler Pair 'metalnessTexture_tex_metalnessTexture_smp':
                Image: metalnessTexture_tex
                Sampler: metalnessTexture_smp
            Image Sampler Pair 'roughnessTexture_tex_roughnessTexture_smp':
                Image: roughnessTexture_tex
                Sampler: roughnessTexture_smp
            Image Sampler Pair 'normalTexture_tex_normalTexture_smp':
                Image: normalTexture_tex
                Sampler: normalTexture_smp
            Image Sampler Pair 'irradianceTexture_tex_irradianceTexture_smp':
                Image: irradianceTexture_tex
                Sampler: irradianceTexture_smp
            Image Sampler Pair 'specularTexture_tex_specularTexture_smp':
                Image: specularTexture_tex
                Sampler: specularTexture_smp
            Image Sampler Pair 'specularBRDF_LUT_tex_specularBRDF_LUT_smp':
                Image: specularBRDF_LUT_tex
                Sampler: specularBRDF_LUT_smp
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before pbr.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_vs_position (0)
#define ATTR_vs_normal (1)
#define ATTR_vs_tangent (2)
#define ATTR_vs_bitangent (3)
#define ATTR_vs_texcoord (4)
#define SLOT_TransformUniforms (0)
#define SLOT_ShadingUniforms (0)
#define SLOT__albedoTexture (0)
#define SLOT_metalnessTexture_tex (1)
#define SLOT_roughnessTexture_tex (2)
#define SLOT_normalTexture_tex (3)
#define SLOT_irradianceTexture_tex (4)
#define SLOT_specularTexture_tex (5)
#define SLOT_specularBRDF_LUT_tex (6)
#define SLOT_albedoTexture_smp (0)
#define SLOT_metalnessTexture_smp (1)
#define SLOT_roughnessTexture_smp (2)
#define SLOT_normalTexture_smp (3)
#define SLOT_irradianceTexture_smp (4)
#define SLOT_specularTexture_smp (5)
#define SLOT_specularBRDF_LUT_smp (6)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct TransformUniforms_t {
    m4 viewMatrix;
    m4 projectionMatrix;
    m4 models[128];
    int batch[128][4];
} TransformUniforms_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct ShadingUniforms_t {
    float lights_direction[3][4];
    float lights_radiance[3][4];
    float eyePosition[3];
    uint8_t _pad_108[4];
} ShadingUniforms_t;
#pragma pack(pop)
/*
    #version 430

    struct TransformUniforms
    {
        mat4 viewMatrix;
        mat4 projectionMatrix;
        mat4 models[128];
        ivec4 batch[128];
    };

    uniform TransformUniforms _19;

    out Vertex
    {
        vec3 position;
        vec2 texcoord;
        mat3 tangentBasis;
        flat uint color;
    } vout;

    layout(location = 0) in vec3 position;
    layout(location = 4) in vec2 texcoord;
    layout(location = 2) in vec3 tangent;
    layout(location = 3) in vec3 bitangent;
    layout(location = 1) in vec3 normal;

    void main()
    {
        vout.color = uint(_19.batch[gl_InstanceID].x);
        vout.position = position;
        vout.texcoord = vec2(texcoord.x, 1.0 - texcoord.y);
        vout.tangentBasis = mat3(_19.models[gl_InstanceID][0].xyz, _19.models[gl_InstanceID][1].xyz, _19.models[gl_InstanceID][2].xyz) * mat3(tangent, bitangent, normal);
        gl_Position = ((_19.projectionMatrix * _19.viewMatrix) * _19.models[gl_InstanceID]) * vec4(position, 1.0);
    }

*/
static const uint8_t vs_source_glsl430[900] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x55,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,
    0x34,0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,
    0x6e,0x4d,0x61,0x74,0x72,0x69,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,
    0x34,0x20,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x31,0x32,0x38,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x34,0x20,0x62,0x61,0x74,0x63,0x68,0x5b,0x31,
    0x32,0x38,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x55,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x73,0x20,0x5f,0x31,0x39,0x3b,0x0a,0x0a,0x6f,0x75,0x74,0x20,0x56,0x65,0x72,
    0x74,0x65,0x78,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x74,0x33,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x61,0x74,0x20,0x75,0x69,0x6e,0x74,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x20,0x76,0x6f,0x75,0x74,0x3b,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x34,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x61,0x6e,0x67,
    0x65,0x6e,0x74,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x62,0x69,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x6f,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x31,0x39,0x2e,0x62,0x61,0x74,0x63,0x68,
    0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x5d,0x2e,
    0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6f,0x75,0x74,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6f,0x75,0x74,0x2e,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6f,
    0x75,0x74,0x2e,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,0x20,
    0x3d,0x20,0x6d,0x61,0x74,0x33,0x28,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,
    0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x5d,
    0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x31,0x39,0x2e,0x6d,0x6f,0x64,
    0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,
    0x44,0x5d,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x31,0x39,0x2e,0x6d,
    0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x49,0x44,0x5d,0x5b,0x32,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x6d,
    0x61,0x74,0x33,0x28,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x2c,0x20,0x62,0x69,0x74,
    0x61,0x6e,0x67,0x65,0x6e,0x74,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x28,0x28,0x5f,0x31,0x39,0x2e,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,
    0x69,0x6f,0x6e,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x2a,0x20,0x5f,0x31,0x39,0x2e,
    0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x29,0x20,0x2a,0x20,0x5f,0x31,
    0x39,0x2e,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x49,0x44,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    uniform vec4 ShadingUniforms[7];
    layout(binding = 0) uniform sampler2D _albedoTexture_albedoTexture_smp;
    layout(binding = 1) uniform sampler2D metalnessTexture_tex_metalnessTexture_smp;
    layout(binding = 2) uniform sampler2D roughnessTexture_tex_roughnessTexture_smp;
    layout(binding = 3) uniform sampler2D normalTexture_tex_normalTexture_smp;
    layout(binding = 4) uniform samplerCube irradianceTexture_tex_irradianceTexture_smp;
    layout(binding = 5) uniform samplerCube specularTexture_tex_specularTexture_smp;
    layout(binding = 6) uniform sampler2D specularBRDF_LUT_tex_specularBRDF_LUT_smp;

    in Vertex
    {
        vec3 position;
        vec2 texcoord;
        mat3 tangentBasis;
        flat uint color;
    } vin;

    layout(location = 0) out vec4 FragColor;

    vec4 u32ToVec4(uint color)
    {
        return vec4(float(color & 255u) * 0.0039215688593685626983642578125, float((color >> uint(8)) & 255u) * 0.0039215688593685626983642578125, float((color >> uint(16)) & 255u) * 0.0039215688593685626983642578125, float((color >> uint(24)) & 255u) * 0.0039215688593685626983642578125);
    }

    vec3 fresnelSchlick(vec3 F0, float cosTheta)
    {
        return F0 + ((vec3(1.0) - F0) * pow(1.0 - cosTheta, 5.0));
    }

    float ndfGGX(float cosLh, float roughness)
    {
        float _40 = roughness * roughness;
        float _53 = fma(cosLh * cosLh, fma(_40, _40, -1.0), 1.0);
        return (_40 * _40) / ((3.1415920257568359375 * _53) * _53);
    }

    float gaSchlickG1(float cosTheta, float k)
    {
        return cosTheta / fma(cosTheta, 1.0 - k, k);
    }

    float gaSchlickGGX(float cosLi, float cosLo, float roughness)
    {
        float _75 = roughness + 1.0;
        float _81 = (_75 * _75) * 0.125;
        float param = cosLi;
        float param_1 = _81;
        float param_2 = cosLo;
        float param_3 = _81;
        return gaSchlickG1(param, param_1) * gaSchlickG1(param_2, param_3);
    }

    void main()
    {
        vec3 albedo;
        if (0u != vin.color)
        {
            uint param = vin.color;
            albedo = u32ToVec4(param).xyz;
        }
        else
        {
            albedo = texture(_albedoTexture_albedoTexture_smp, vin.texcoord).xyz;
        }
        vec4 _198 = texture(roughnessTexture_tex_roughnessTexture_smp, vin.texcoord);
        float _199 = _198.x;
        vec3 _216 = normalize(ShadingUniforms[6].xyz - vin.position);
        vec3 _237 = normalize(vin.tangentBasis * normalize((texture(normalTexture_tex_normalTexture_smp, vin.texcoord).xyz * 2.0) - vec3(1.0)));
        float _243 = max(0.0, dot(_237, _216));
        vec3 _256 = vec3(texture(metalnessTexture_tex_metalnessTexture_smp, vin.texcoord).x);
        vec3 _257 = mix(vec3(0.039999999105930328369140625), albedo, _256);
        vec3 directLighting = vec3(0.0);
        for (int i = 0; i < 3; i++)
        {
            vec3 _275 = -ShadingUniforms[i * 1 + 0].xyz;
            vec3 _285 = normalize(_275 + _216);
            float _290 = max(0.0, dot(_237, _275));
            vec3 param_1 = _257;
            float param_2 = max(0.0, dot(_285, _216));
            vec3 _304 = fresnelSchlick(param_1, param_2);
            float param_3 = max(0.0, dot(_237, _285));
            float param_4 = _199;
            float param_5 = _290;
            float param_6 = _243;
            float param_7 = _199;
            directLighting += ((fma(mix(vec3(1.0) - _304, vec3(0.0), _256), albedo, ((_304 * ndfGGX(param_3, param_4)) * gaSchlickGGX(param_5, param_6, param_7)) / vec3(max(9.9999997473787516355514526367188e-06, (4.0 * _290) * _243))) * ShadingUniforms[i * 1 + 3].xyz) * _290);
        }
        vec3 param_8 = _257;
        float param_9 = _243;
        vec4 _414 = texture(specularBRDF_LUT_tex_specularBRDF_LUT_smp, vec2(_243, _199));
        FragColor = vec4(directLighting + fma(mix(vec3(1.0) - fresnelSchlick(param_8, param_9), vec3(0.0), _256) * albedo, texture(irradianceTexture_tex_irradianceTexture_smp, _237).xyz, ((_257 * _414.x) + vec3(_414.y)) * textureLod(specularTexture_tex_specularTexture_smp, (_237 * (2.0 * _243)) - _216, _199 * float(textureQueryLevels(specularTexture_tex_specularTexture_smp))).xyz), 1.0);
    }

*/
static const uint8_t fs_source_glsl430[3891] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x53,0x68,0x61,0x64,0x69,
    0x6e,0x67,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x37,0x5d,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x32,0x44,0x20,0x5f,0x61,0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x61,0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,
    0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x6d,0x65,0x74,
    0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,
    0x78,0x5f,0x6d,0x65,0x74,0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,
    0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x32,0x29,0x20,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,
    0x65,0x78,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x33,0x29,0x20,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,
    0x6e,0x67,0x20,0x3d,0x20,0x34,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x43,0x75,0x62,0x65,0x20,0x69,0x72,0x72,0x61,
    0x64,0x69,0x61,0x6e,0x63,0x65,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,
    0x78,0x5f,0x69,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x35,0x29,0x20,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x43,0x75,0x62,0x65,
    0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x74,0x65,0x78,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x36,0x29,0x20,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,
    0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x42,0x52,0x44,0x46,0x5f,0x4c,0x55,0x54,
    0x5f,0x74,0x65,0x78,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x42,0x52,0x44,
    0x46,0x5f,0x4c,0x55,0x54,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x69,0x6e,0x20,0x56,
    0x65,0x72,0x74,0x65,0x78,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6d,0x61,0x74,0x33,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,
    0x73,0x69,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x61,0x74,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x20,0x76,0x69,0x6e,0x3b,
    0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x65,0x63,0x34,
    0x20,0x75,0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,0x28,0x75,0x69,0x6e,0x74,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,
    0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,
    0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,
    0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,
    0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,
    0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,0x29,
    0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,
    0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,
    0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,
    0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,
    0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,
    0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x66,
    0x72,0x65,0x73,0x6e,0x65,0x6c,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x28,0x76,0x65,
    0x63,0x33,0x20,0x46,0x30,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,
    0x54,0x68,0x65,0x74,0x61,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x46,0x30,0x20,0x2b,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x28,
    0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,0x46,0x30,0x29,0x20,0x2a,0x20,0x70,0x6f,0x77,
    0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,0x2c,
    0x20,0x35,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6e,0x64,0x66,0x47,0x47,0x58,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,
    0x73,0x4c,0x68,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,
    0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x33,0x20,0x3d,0x20,0x66,
    0x6d,0x61,0x28,0x63,0x6f,0x73,0x4c,0x68,0x20,0x2a,0x20,0x63,0x6f,0x73,0x4c,0x68,
    0x2c,0x20,0x66,0x6d,0x61,0x28,0x5f,0x34,0x30,0x2c,0x20,0x5f,0x34,0x30,0x2c,0x20,
    0x2d,0x31,0x2e,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x5f,0x34,0x30,0x20,0x2a,0x20,0x5f,
    0x34,0x30,0x29,0x20,0x2f,0x20,0x28,0x28,0x33,0x2e,0x31,0x34,0x31,0x35,0x39,0x32,
    0x30,0x32,0x35,0x37,0x35,0x36,0x38,0x33,0x35,0x39,0x33,0x37,0x35,0x20,0x2a,0x20,
    0x5f,0x35,0x33,0x29,0x20,0x2a,0x20,0x5f,0x35,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,
    0x31,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6b,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,
    0x20,0x2f,0x20,0x66,0x6d,0x61,0x28,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,0x2c,
    0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x6b,0x2c,0x20,0x6b,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,
    0x47,0x47,0x58,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x4c,0x69,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x4c,0x6f,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x35,0x20,0x3d,
    0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2b,0x20,0x31,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x31,0x20,
    0x3d,0x20,0x28,0x5f,0x37,0x35,0x20,0x2a,0x20,0x5f,0x37,0x35,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x63,0x6f,0x73,0x4c,0x69,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x20,0x3d,0x20,0x5f,0x38,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x63,0x6f,0x73,
    0x4c,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x38,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,
    0x6b,0x47,0x31,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x29,0x20,0x2a,0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,
    0x31,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x61,
    0x6c,0x62,0x65,0x64,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x30,
    0x75,0x20,0x21,0x3d,0x20,0x76,0x69,0x6e,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x69,0x6e,0x2e,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,
    0x62,0x65,0x64,0x6f,0x20,0x3d,0x20,0x75,0x33,0x32,0x54,0x6f,0x56,0x65,0x63,0x34,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x5f,0x61,0x6c,0x62,0x65,
    0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x61,0x6c,0x62,0x65,0x64,0x6f,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,
    0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x31,0x39,0x38,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,
    0x65,0x78,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,0x2e,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x39,0x39,0x20,0x3d,0x20,0x5f,0x31,0x39,0x38,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x31,0x36,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x53,0x68,0x61,0x64,0x69,
    0x6e,0x67,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x36,0x5d,0x2e,0x78,0x79,
    0x7a,0x20,0x2d,0x20,0x76,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x33,0x37,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x69,0x6e,
    0x2e,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,0x20,0x2a,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x74,0x65,0x78,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,
    0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x34,0x33,0x20,0x3d,
    0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,
    0x33,0x37,0x2c,0x20,0x5f,0x32,0x31,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x35,0x36,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x6d,0x65,0x74,0x61,0x6c,0x6e,0x65,
    0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x5f,0x6d,0x65,
    0x74,0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x29,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x32,0x35,0x37,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x33,0x28,0x30,
    0x2e,0x30,0x33,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x31,0x30,0x35,0x39,0x33,0x30,
    0x33,0x32,0x38,0x33,0x36,0x39,0x31,0x34,0x30,0x36,0x32,0x35,0x29,0x2c,0x20,0x61,
    0x6c,0x62,0x65,0x64,0x6f,0x2c,0x20,0x5f,0x32,0x35,0x36,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x4c,0x69,0x67,
    0x68,0x74,0x69,0x6e,0x67,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x33,0x3b,0x20,0x69,0x2b,
    0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x37,0x35,0x20,0x3d,0x20,0x2d,0x53,0x68,
    0x61,0x64,0x69,0x6e,0x67,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,0x5b,0x69,0x20,
    0x2a,0x20,0x31,0x20,0x2b,0x20,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x38,0x35,0x20,
    0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x37,0x35,
    0x20,0x2b,0x20,0x5f,0x32,0x31,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x39,0x30,0x20,0x3d,0x20,0x6d,
    0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x33,0x37,
    0x2c,0x20,0x5f,0x32,0x37,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x5f,0x32,0x35,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x6d,
    0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x38,0x35,
    0x2c,0x20,0x5f,0x32,0x31,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x34,0x20,0x3d,0x20,0x66,0x72,
    0x65,0x73,0x6e,0x65,0x6c,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x2c,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x33,0x37,0x2c,0x20,0x5f,0x32,0x38,0x35,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x39,0x39,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x32,0x39,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x32,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x39,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x4c,0x69,0x67,0x68,0x74,0x69,0x6e,
    0x67,0x20,0x2b,0x3d,0x20,0x28,0x28,0x66,0x6d,0x61,0x28,0x6d,0x69,0x78,0x28,0x76,
    0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,0x5f,0x33,0x30,0x34,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x5f,0x32,0x35,0x36,
    0x29,0x2c,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,0x2c,0x20,0x28,0x28,0x5f,0x33,0x30,
    0x34,0x20,0x2a,0x20,0x6e,0x64,0x66,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x29,0x20,0x2a,0x20,
    0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x37,0x29,0x29,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,
    0x6d,0x61,0x78,0x28,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,
    0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,
    0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x36,0x2c,0x20,0x28,0x34,0x2e,0x30,0x20,
    0x2a,0x20,0x5f,0x32,0x39,0x30,0x29,0x20,0x2a,0x20,0x5f,0x32,0x34,0x33,0x29,0x29,
    0x29,0x20,0x2a,0x20,0x53,0x68,0x61,0x64,0x69,0x6e,0x67,0x55,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x73,0x5b,0x69,0x20,0x2a,0x20,0x31,0x20,0x2b,0x20,0x33,0x5d,0x2e,0x78,
    0x79,0x7a,0x29,0x20,0x2a,0x20,0x5f,0x32,0x39,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x38,0x20,0x3d,0x20,0x5f,0x32,0x35,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,
    0x5f,0x32,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x34,0x31,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x42,0x52,0x44,0x46,0x5f,0x4c,0x55,0x54,0x5f,0x74,
    0x65,0x78,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x42,0x52,0x44,0x46,0x5f,
    0x4c,0x55,0x54,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,
    0x34,0x33,0x2c,0x20,0x5f,0x31,0x39,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x64,0x69,0x72,0x65,0x63,0x74,0x4c,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x20,
    0x2b,0x20,0x66,0x6d,0x61,0x28,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x33,0x28,0x31,
    0x2e,0x30,0x29,0x20,0x2d,0x20,0x66,0x72,0x65,0x73,0x6e,0x65,0x6c,0x53,0x63,0x68,
    0x6c,0x69,0x63,0x6b,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x39,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x2c,0x20,0x5f,0x32,0x35,0x36,0x29,0x20,0x2a,0x20,0x61,0x6c,0x62,0x65,0x64,
    0x6f,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x69,0x72,0x72,0x61,0x64,
    0x69,0x61,0x6e,0x63,0x65,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,
    0x5f,0x69,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x54,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x5f,0x32,0x33,0x37,0x29,0x2e,0x78,0x79,
    0x7a,0x2c,0x20,0x28,0x28,0x5f,0x32,0x35,0x37,0x20,0x2a,0x20,0x5f,0x34,0x31,0x34,
    0x2e,0x78,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,0x31,0x34,0x2e,
    0x79,0x29,0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x4c,0x6f,0x64,
    0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x74,0x65,0x78,0x5f,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x28,0x5f,0x32,0x33,0x37,0x20,
    0x2a,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x5f,0x32,0x34,0x33,0x29,0x29,0x20,
    0x2d,0x20,0x5f,0x32,0x31,0x36,0x2c,0x20,0x5f,0x31,0x39,0x39,0x20,0x2a,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x51,0x75,0x65,0x72,
    0x79,0x4c,0x65,0x76,0x65,0x6c,0x73,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x5f,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x29,
    0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
/*
    struct Vertex
    {
        float3 position;
        float2 texcoord;
        float3x3 tangentBasis;
        uint color;
    };

    cbuffer TransformUniforms : register(b0)
    {
        row_major float4x4 _19_viewMatrix : packoffset(c0);
        row_major float4x4 _19_projectionMatrix : packoffset(c4);
        row_major float4x4 _19_models[128] : packoffset(c8);
        int4 _19_batch[128] : packoffset(c520);
    };


    static float4 gl_Position;
    static int gl_InstanceIndex;
    static Vertex vout;
    static float3 position;
    static float2 texcoord;
    static float3 tangent;
    static float3 bitangent;
    static float3 normal;

    struct SPIRV_Cross_Input
    {
        float3 position : TEXCOORD0;
        float3 normal : TEXCOORD1;
        float3 tangent : TEXCOORD2;
        float3 bitangent : TEXCOORD3;
        float2 texcoord : TEXCOORD4;
        uint gl_InstanceIndex : SV_InstanceID;
    };

    struct SPIRV_Cross_Output
    {
        float3 Vertex_position : TEXCOORD0;
        float2 Vertex_texcoord : TEXCOORD1;
        float3x3 Vertex_tangentBasis : TEXCOORD2;
        nointerpolation uint Vertex_color : TEXCOORD5;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        vout.color = uint(_19_batch[gl_InstanceIndex].x);
        vout.position = position;
        vout.texcoord = float2(texcoord.x, 1.0f - texcoord.y);
        vout.tangentBasis = mul(float3x3(tangent, bitangent, normal), float3x3(_19_models[gl_InstanceIndex][0].xyz, _19_models[gl_InstanceIndex][1].xyz, _19_models[gl_InstanceIndex][2].xyz));
        gl_Position = mul(float4(position, 1.0f), mul(_19_models[gl_InstanceIndex], mul(_19_viewMatrix, _19_projectionMatrix)));
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        gl_InstanceIndex = int(stage_input.gl_InstanceIndex);
        position = stage_input.position;
        texcoord = stage_input.texcoord;
        tangent = stage_input.tangent;
        bitangent = stage_input.bitangent;
        normal = stage_input.normal;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.Vertex_position = vout.position;
        stage_output.Vertex_texcoord = vout.texcoord;
        stage_output.Vertex_tangentBasis = vout.tangentBasis;
        stage_output.Vertex_color = vout.color;
        return stage_output;
    }
*/
static const uint8_t vs_source_hlsl5[2153] = {
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,
    0x73,0x69,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x63,0x62,0x75,0x66,0x66,0x65,0x72,
    0x20,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x55,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,
    0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x39,0x5f,0x76,
    0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x78,0x34,0x20,0x5f,0x31,0x39,0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,
    0x6e,0x4d,0x61,0x74,0x72,0x69,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,
    0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,
    0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x5f,0x31,0x39,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x31,0x32,0x38,0x5d,
    0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x34,0x20,0x5f,0x31,0x39,0x5f,
    0x62,0x61,0x74,0x63,0x68,0x5b,0x31,0x32,0x38,0x5d,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x35,0x32,0x30,0x29,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x49,0x6e,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x20,0x76,0x6f,0x75,0x74,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x74,0x61,
    0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x62,0x69,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x74,0x61,0x6e,
    0x67,0x65,0x6e,0x74,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x62,0x69,0x74,
    0x61,0x6e,0x67,0x65,0x6e,0x74,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,
    0x52,0x44,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x67,0x6c,
    0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,
    0x20,0x53,0x56,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x56,0x65,0x72,0x74,0x65,
    0x78,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x56,0x65,0x72,
    0x74,0x65,0x78,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,
    0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x6e,0x6f,0x69,0x6e,0x74,0x65,0x72,0x70,0x6f,0x6c,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x75,0x69,0x6e,0x74,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x6f,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x75,
    0x69,0x6e,0x74,0x28,0x5f,0x31,0x39,0x5f,0x62,0x61,0x74,0x63,0x68,0x5b,0x67,0x6c,
    0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5d,0x2e,
    0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6f,0x75,0x74,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x6f,0x75,0x74,0x2e,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x6f,0x75,0x74,0x2e,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,
    0x69,0x73,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,
    0x33,0x28,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x2c,0x20,0x62,0x69,0x74,0x61,0x6e,
    0x67,0x65,0x6e,0x74,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,0x5f,0x31,0x39,0x5f,0x6d,0x6f,0x64,0x65,
    0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,
    0x64,0x65,0x78,0x5d,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x31,0x39,
    0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,
    0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5d,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,
    0x2c,0x20,0x5f,0x31,0x39,0x5f,0x6d,0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,
    0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5d,0x5b,0x32,
    0x5d,0x2e,0x78,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x31,0x39,0x5f,0x6d,
    0x6f,0x64,0x65,0x6c,0x73,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x49,0x6e,0x64,0x65,0x78,0x5d,0x2c,0x20,0x6d,0x75,0x6c,0x28,0x5f,0x31,0x39,
    0x5f,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x72,0x69,0x78,0x2c,0x20,0x5f,0x31,0x39,
    0x5f,0x70,0x72,0x6f,0x6a,0x65,0x63,0x74,0x69,0x6f,0x6e,0x4d,0x61,0x74,0x72,0x69,
    0x78,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,
    0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,
    0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,
    0x74,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x69,0x74,
    0x61,0x6e,0x67,0x65,0x6e,0x74,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x62,0x69,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x6f,0x75,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x2e,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,0x6f,0x75,0x74,0x2e,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x74,
    0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,0x20,0x3d,0x20,0x76,0x6f,
    0x75,0x74,0x2e,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x2e,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x6f,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    struct Vertex
    {
        float3 position;
        float2 texcoord;
        float3x3 tangentBasis;
        uint color;
    };

    cbuffer ShadingUniforms : register(b0)
    {
        float4 _206_lights_direction[3] : packoffset(c0);
        float4 _206_lights_radiance[3] : packoffset(c3);
        float3 _206_eyePosition : packoffset(c6);
    };

    Texture2D<float4> _albedoTexture : register(t0);
    SamplerState albedoTexture_smp : register(s0);
    Texture2D<float4> metalnessTexture_tex : register(t1);
    SamplerState metalnessTexture_smp : register(s1);
    Texture2D<float4> roughnessTexture_tex : register(t2);
    SamplerState roughnessTexture_smp : register(s2);
    Texture2D<float4> normalTexture_tex : register(t3);
    SamplerState normalTexture_smp : register(s3);
    TextureCube<float4> irradianceTexture_tex : register(t4);
    SamplerState irradianceTexture_smp : register(s4);
    TextureCube<float4> specularTexture_tex : register(t5);
    SamplerState specularTexture_smp : register(s5);
    Texture2D<float4> specularBRDF_LUT_tex : register(t6);
    SamplerState specularBRDF_LUT_smp : register(s6);

    static Vertex vin;
    static float4 FragColor;

    struct SPIRV_Cross_Input
    {
        float3 Vertex_position : TEXCOORD0;
        float2 Vertex_texcoord : TEXCOORD1;
        float3x3 Vertex_tangentBasis : TEXCOORD2;
        nointerpolation uint Vertex_color : TEXCOORD5;
    };

    struct SPIRV_Cross_Output
    {
        float4 FragColor : SV_Target0;
    };

    uint2 spvTextureSize(TextureCube<float4> Tex, uint Level, out uint Param)
    {
        uint2 ret;
        Tex.GetDimensions(Level, ret.x, ret.y, Param);
        return ret;
    }

    float4 u32ToVec4(uint color)
    {
        return float4(float(color & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(8)) & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(16)) & 255u) * 0.0039215688593685626983642578125f, float((color >> uint(24)) & 255u) * 0.0039215688593685626983642578125f);
    }

    float3 fresnelSchlick(float3 F0, float cosTheta)
    {
        return F0 + ((1.0f.xxx - F0) * pow(1.0f - cosTheta, 5.0f));
    }

    float ndfGGX(float cosLh, float roughness)
    {
        float _40 = roughness * roughness;
        float _53 = mad(cosLh * cosLh, mad(_40, _40, -1.0f), 1.0f);
        return (_40 * _40) / ((3.1415920257568359375f * _53) * _53);
    }

    float gaSchlickG1(float cosTheta, float k)
    {
        return cosTheta / mad(cosTheta, 1.0f - k, k);
    }

    float gaSchlickGGX(float cosLi, float cosLo, float roughness)
    {
        float _75 = roughness + 1.0f;
        float _81 = (_75 * _75) * 0.125f;
        float param = cosLi;
        float param_1 = _81;
        float param_2 = cosLo;
        float param_3 = _81;
        return gaSchlickG1(param, param_1) * gaSchlickG1(param_2, param_3);
    }

    void frag_main()
    {
        float3 albedo;
        if (0u != vin.color)
        {
            uint param = vin.color;
            albedo = u32ToVec4(param).xyz;
        }
        else
        {
            albedo = _albedoTexture.Sample(albedoTexture_smp, vin.texcoord).xyz;
        }
        float4 _198 = roughnessTexture_tex.Sample(roughnessTexture_smp, vin.texcoord);
        float _199 = _198.x;
        float3 _216 = normalize(_206_eyePosition - vin.position);
        float3 _237 = normalize(mul(normalize((normalTexture_tex.Sample(normalTexture_smp, vin.texcoord).xyz * 2.0f) - 1.0f.xxx), vin.tangentBasis));
        float _243 = max(0.0f, dot(_237, _216));
        float3 _256 = metalnessTexture_tex.Sample(metalnessTexture_smp, vin.texcoord).x.xxx;
        float3 _257 = lerp(0.039999999105930328369140625f.xxx, albedo, _256);
        float3 directLighting = 0.0f.xxx;
        for (int i = 0; i < 3; i++)
        {
            float3 _275 = -_206_lights_direction[i].xyz;
            float3 _285 = normalize(_275 + _216);
            float _290 = max(0.0f, dot(_237, _275));
            float3 param_1 = _257;
            float param_2 = max(0.0f, dot(_285, _216));
            float3 _304 = fresnelSchlick(param_1, param_2);
            float param_3 = max(0.0f, dot(_237, _285));
            float param_4 = _199;
            float param_5 = _290;
            float param_6 = _243;
            float param_7 = _199;
            directLighting += ((mad(lerp(1.0f.xxx - _304, 0.0f.xxx, _256), albedo, ((_304 * ndfGGX(param_3, param_4)) * gaSchlickGGX(param_5, param_6, param_7)) / max(9.9999997473787516355514526367188e-06f, (4.0f * _290) * _243).xxx) * _206_lights_radiance[i].xyz) * _290);
        }
        float3 param_8 = _257;
        float param_9 = _243;
        int _392;
        spvTextureSize(specularTexture_tex, 0u, _392);
        float4 _414 = specularBRDF_LUT_tex.Sample(specularBRDF_LUT_smp, float2(_243, _199));
        FragColor = float4(directLighting + mad(lerp(1.0f.xxx - fresnelSchlick(param_8, param_9), 0.0f.xxx, _256) * albedo, irradianceTexture_tex.Sample(irradianceTexture_smp, _237).xyz, ((_257 * _414.x) + _414.y.xxx) * specularTexture_tex.SampleLevel(specularTexture_smp, (_237 * (2.0f * _243)) - _216, _199 * float(int(_392))).xyz), 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        vin.position = stage_input.Vertex_position;
        vin.texcoord = stage_input.Vertex_texcoord;
        vin.tangentBasis = stage_input.Vertex_tangentBasis;
        vin.color = stage_input.Vertex_color;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.FragColor = FragColor;
        return stage_output;
    }
*/
static const uint8_t fs_source_hlsl5[5080] = {
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,
    0x73,0x69,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x63,0x62,0x75,0x66,0x66,0x65,0x72,
    0x20,0x53,0x68,0x61,0x64,0x69,0x6e,0x67,0x55,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x73,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x30,
    0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,
    0x6f,0x6e,0x5b,0x33,0x5d,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x32,0x30,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5f,0x72,
    0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x5b,0x33,0x5d,0x20,0x3a,0x20,0x70,0x61,0x63,
    0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x30,0x36,0x5f,0x65,0x79,0x65,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x36,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,
    0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,
    0x20,0x5f,0x61,0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x20,
    0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,
    0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x61,0x6c,0x62,
    0x65,0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x20,0x3a,
    0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x54,
    0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,
    0x20,0x6d,0x65,0x74,0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x74,0x31,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,
    0x74,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,
    0x65,0x72,0x28,0x73,0x31,0x29,0x3b,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,
    0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x20,0x3a,
    0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x32,0x29,0x3b,0x0a,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x72,0x6f,0x75,0x67,
    0x68,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x32,0x29,0x3b,
    0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x3e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,
    0x74,0x33,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,
    0x65,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,
    0x33,0x29,0x3b,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x43,0x75,0x62,0x65,0x3c,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x69,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,
    0x63,0x65,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x34,0x29,0x3b,0x0a,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x69,0x72,0x72,0x61,0x64,
    0x69,0x61,0x6e,0x63,0x65,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x34,0x29,0x3b,
    0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x43,0x75,0x62,0x65,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x3e,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,
    0x74,0x65,0x72,0x28,0x74,0x35,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x53,0x74,0x61,0x74,0x65,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,
    0x73,0x74,0x65,0x72,0x28,0x73,0x35,0x29,0x3b,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,
    0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x42,0x52,0x44,0x46,0x5f,0x4c,0x55,0x54,0x5f,0x74,0x65,0x78,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x36,0x29,0x3b,
    0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x42,0x52,0x44,0x46,0x5f,0x4c,0x55,0x54,0x5f,0x73,
    0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x36,
    0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x56,0x65,0x72,0x74,0x65,
    0x78,0x20,0x76,0x69,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x56,
    0x65,0x72,0x74,0x65,0x78,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,
    0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,
    0x69,0x6e,0x74,0x65,0x72,0x70,0x6f,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x35,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,
    0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x32,0x20,0x73,0x70,0x76,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x53,0x69,0x7a,0x65,0x28,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x43,0x75,0x62,0x65,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x54,0x65,0x78,
    0x2c,0x20,0x75,0x69,0x6e,0x74,0x20,0x4c,0x65,0x76,0x65,0x6c,0x2c,0x20,0x6f,0x75,
    0x74,0x20,0x75,0x69,0x6e,0x74,0x20,0x50,0x61,0x72,0x61,0x6d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x32,0x20,0x72,0x65,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x54,0x65,0x78,0x2e,0x47,0x65,0x74,0x44,0x69,0x6d,0x65,0x6e,0x73,
    0x69,0x6f,0x6e,0x73,0x28,0x4c,0x65,0x76,0x65,0x6c,0x2c,0x20,0x72,0x65,0x74,0x2e,
    0x78,0x2c,0x20,0x72,0x65,0x74,0x2e,0x79,0x2c,0x20,0x50,0x61,0x72,0x61,0x6d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x72,0x65,0x74,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x75,0x33,0x32,0x54,
    0x6f,0x56,0x65,0x63,0x34,0x28,0x75,0x69,0x6e,0x74,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,
    0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,
    0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x38,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,
    0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,
    0x38,0x31,0x32,0x35,0x66,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x36,0x29,0x29,
    0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,
    0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,
    0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3e,0x3e,0x20,0x75,
    0x69,0x6e,0x74,0x28,0x32,0x34,0x29,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,
    0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,
    0x38,0x31,0x32,0x35,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x66,0x72,0x65,0x73,0x6e,0x65,0x6c,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x46,0x30,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x46,0x30,0x20,0x2b,0x20,0x28,0x28,
    0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x20,0x2d,0x20,0x46,0x30,0x29,0x20,0x2a,
    0x20,0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x63,0x6f,0x73,0x54,
    0x68,0x65,0x74,0x61,0x2c,0x20,0x35,0x2e,0x30,0x66,0x29,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x64,0x66,0x47,0x47,0x58,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x4c,0x68,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x30,0x20,0x3d,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x35,0x33,0x20,0x3d,0x20,0x6d,0x61,0x64,0x28,0x63,0x6f,0x73,0x4c,0x68,0x20,0x2a,
    0x20,0x63,0x6f,0x73,0x4c,0x68,0x2c,0x20,0x6d,0x61,0x64,0x28,0x5f,0x34,0x30,0x2c,
    0x20,0x5f,0x34,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x31,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x28,0x5f,0x34,0x30,0x20,0x2a,0x20,0x5f,0x34,0x30,0x29,0x20,0x2f,0x20,0x28,0x28,
    0x33,0x2e,0x31,0x34,0x31,0x35,0x39,0x32,0x30,0x32,0x35,0x37,0x35,0x36,0x38,0x33,
    0x35,0x39,0x33,0x37,0x35,0x66,0x20,0x2a,0x20,0x5f,0x35,0x33,0x29,0x20,0x2a,0x20,
    0x5f,0x35,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,
    0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x31,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x6b,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,0x20,0x2f,0x20,0x6d,0x61,0x64,0x28,
    0x63,0x6f,0x73,0x54,0x68,0x65,0x74,0x61,0x2c,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,
    0x20,0x6b,0x2c,0x20,0x6b,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x63,0x6f,0x73,0x4c,0x69,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x63,0x6f,0x73,0x4c,0x6f,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,
    0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x35,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x20,0x2b,0x20,0x31,0x2e,0x30,0x66,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x28,0x5f,0x37,
    0x35,0x20,0x2a,0x20,0x5f,0x37,0x35,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x32,0x35,
    0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x63,0x6f,0x73,0x4c,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,
    0x5f,0x38,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x63,0x6f,0x73,0x4c,0x6f,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x20,0x3d,0x20,0x5f,0x38,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x31,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,
    0x2a,0x20,0x67,0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x31,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x30,0x75,0x20,0x21,0x3d,0x20,0x76,0x69,0x6e,0x2e,0x63,0x6f,0x6c,0x6f,
    0x72,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x69,
    0x6e,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,0x20,0x3d,0x20,0x75,0x33,0x32,0x54,0x6f,0x56,
    0x65,0x63,0x34,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6c,0x62,
    0x65,0x64,0x6f,0x20,0x3d,0x20,0x5f,0x61,0x6c,0x62,0x65,0x64,0x6f,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x61,0x6c,0x62,0x65,
    0x64,0x6f,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,
    0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x31,0x39,0x38,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x2e,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x28,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x54,
    0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,0x2e,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x39,0x20,0x3d,0x20,0x5f,0x31,0x39,0x38,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,
    0x32,0x31,0x36,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x5f,0x32,0x30,0x36,0x5f,0x65,0x79,0x65,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x2d,0x20,0x76,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x33,
    0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6d,0x75,
    0x6c,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x28,0x6e,0x6f,0x72,
    0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x2e,0x53,
    0x61,0x6d,0x70,0x6c,0x65,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,0x2e,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x32,0x2e,0x30,
    0x66,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x29,0x2c,0x20,
    0x76,0x69,0x6e,0x2e,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x34,0x33,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x64,
    0x6f,0x74,0x28,0x5f,0x32,0x33,0x37,0x2c,0x20,0x5f,0x32,0x31,0x36,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x35,0x36,
    0x20,0x3d,0x20,0x6d,0x65,0x74,0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x6d,
    0x65,0x74,0x61,0x6c,0x6e,0x65,0x73,0x73,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,
    0x73,0x6d,0x70,0x2c,0x20,0x76,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x29,0x2e,0x78,0x2e,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x35,0x37,0x20,0x3d,0x20,0x6c,0x65,0x72,0x70,
    0x28,0x30,0x2e,0x30,0x33,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x31,0x30,0x35,0x39,
    0x33,0x30,0x33,0x32,0x38,0x33,0x36,0x39,0x31,0x34,0x30,0x36,0x32,0x35,0x66,0x2e,
    0x78,0x78,0x78,0x2c,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,0x2c,0x20,0x5f,0x32,0x35,
    0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x64,
    0x69,0x72,0x65,0x63,0x74,0x4c,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x20,0x3d,0x20,
    0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,
    0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,
    0x3c,0x20,0x33,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,
    0x32,0x37,0x35,0x20,0x3d,0x20,0x2d,0x5f,0x32,0x30,0x36,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x73,0x5f,0x64,0x69,0x72,0x65,0x63,0x74,0x69,0x6f,0x6e,0x5b,0x69,0x5d,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x32,0x38,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x37,0x35,0x20,0x2b,0x20,0x5f,0x32,0x31,0x36,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x32,0x39,0x30,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x66,
    0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x33,0x37,0x2c,0x20,0x5f,0x32,0x37,0x35,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x32,0x35,
    0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,
    0x2e,0x30,0x66,0x2c,0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x38,0x35,0x2c,0x20,0x5f,
    0x32,0x31,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x30,0x34,0x20,0x3d,0x20,0x66,0x72,0x65,
    0x73,0x6e,0x65,0x6c,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x30,0x2e,0x30,0x66,0x2c,
    0x20,0x64,0x6f,0x74,0x28,0x5f,0x32,0x33,0x37,0x2c,0x20,0x5f,0x32,0x38,0x35,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x31,0x39,0x39,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x32,0x39,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x32,0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x37,0x20,0x3d,0x20,0x5f,0x31,0x39,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x64,0x69,0x72,0x65,0x63,0x74,0x4c,0x69,0x67,0x68,0x74,0x69,0x6e,
    0x67,0x20,0x2b,0x3d,0x20,0x28,0x28,0x6d,0x61,0x64,0x28,0x6c,0x65,0x72,0x70,0x28,
    0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x20,0x2d,0x20,0x5f,0x33,0x30,0x34,0x2c,
    0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x2c,0x20,0x5f,0x32,0x35,0x36,0x29,
    0x2c,0x20,0x61,0x6c,0x62,0x65,0x64,0x6f,0x2c,0x20,0x28,0x28,0x5f,0x33,0x30,0x34,
    0x20,0x2a,0x20,0x6e,0x64,0x66,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x29,0x20,0x2a,0x20,0x67,
    0x61,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x47,0x47,0x58,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x29,0x29,0x20,0x2f,0x20,0x6d,0x61,0x78,0x28,0x39,0x2e,
    0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,
    0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,
    0x2d,0x30,0x36,0x66,0x2c,0x20,0x28,0x34,0x2e,0x30,0x66,0x20,0x2a,0x20,0x5f,0x32,
    0x39,0x30,0x29,0x20,0x2a,0x20,0x5f,0x32,0x34,0x33,0x29,0x2e,0x78,0x78,0x78,0x29,
    0x20,0x2a,0x20,0x5f,0x32,0x30,0x36,0x5f,0x6c,0x69,0x67,0x68,0x74,0x73,0x5f,0x72,
    0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,
    0x2a,0x20,0x5f,0x32,0x39,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x38,0x20,0x3d,0x20,0x5f,0x32,0x35,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x5f,0x32,
    0x34,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x33,0x39,0x32,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x76,0x54,0x65,0x78,0x74,0x75,0x72,0x65,
    0x53,0x69,0x7a,0x65,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x2c,0x20,0x30,0x75,0x2c,0x20,0x5f,0x33,
    0x39,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x5f,0x34,0x31,0x34,0x20,0x3d,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x42,
    0x52,0x44,0x46,0x5f,0x4c,0x55,0x54,0x5f,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x42,0x52,0x44,0x46,0x5f,
    0x4c,0x55,0x54,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x5f,0x32,0x34,0x33,0x2c,0x20,0x5f,0x31,0x39,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x64,0x69,0x72,0x65,0x63,0x74,0x4c,0x69,0x67,0x68,0x74,
    0x69,0x6e,0x67,0x20,0x2b,0x20,0x6d,0x61,0x64,0x28,0x6c,0x65,0x72,0x70,0x28,0x31,
    0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x20,0x2d,0x20,0x66,0x72,0x65,0x73,0x6e,0x65,
    0x6c,0x53,0x63,0x68,0x6c,0x69,0x63,0x6b,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x2e,0x78,0x78,0x78,0x2c,0x20,0x5f,0x32,0x35,0x36,0x29,0x20,0x2a,0x20,0x61,0x6c,
    0x62,0x65,0x64,0x6f,0x2c,0x20,0x69,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x28,0x69,0x72,0x72,0x61,0x64,0x69,0x61,0x6e,0x63,0x65,0x54,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x5f,0x32,0x33,0x37,0x29,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x28,0x28,0x5f,0x32,0x35,0x37,0x20,0x2a,0x20,0x5f,0x34,
    0x31,0x34,0x2e,0x78,0x29,0x20,0x2b,0x20,0x5f,0x34,0x31,0x34,0x2e,0x79,0x2e,0x78,
    0x78,0x78,0x29,0x20,0x2a,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,
    0x4c,0x65,0x76,0x65,0x6c,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x28,0x5f,0x32,0x33,0x37,
    0x20,0x2a,0x20,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x5f,0x32,0x34,0x33,0x29,
    0x29,0x20,0x2d,0x20,0x5f,0x32,0x31,0x36,0x2c,0x20,0x5f,0x31,0x39,0x39,0x20,0x2a,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x6e,0x74,0x28,0x5f,0x33,0x39,0x32,0x29,
    0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x56,0x65,0x72,0x74,0x65,
    0x78,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x69,0x6e,0x2e,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x56,0x65,0x72,0x74,0x65,
    0x78,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x69,0x6e,0x2e,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,0x69,0x73,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x56,
    0x65,0x72,0x74,0x65,0x78,0x5f,0x74,0x61,0x6e,0x67,0x65,0x6e,0x74,0x42,0x61,0x73,
    0x69,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x69,0x6e,0x2e,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x56,0x65,0x72,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,
    0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,
    0x74,0x70,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
static inline const sg_shader_desc* pbr_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].name = "position";
            desc.attrs[1].name = "normal";
            desc.attrs[2].name = "tangent";
            desc.attrs[3].name = "bitangent";
            desc.attrs[4].name = "texcoord";
            desc.vs.source = (const char*)vs_source_glsl430;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 10368;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.vs.uniform_blocks[0].uniforms[0].name = "_19.viewMatrix";
            desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_MAT4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 0;
            desc.vs.uniform_blocks[0].uniforms[1].name = "_19.projectionMatrix";
            desc.vs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_MAT4;
            desc.vs.uniform_blocks[0].uniforms[1].array_count = 0;
            desc.vs.uniform_blocks[0].uniforms[2].name = "_19.models";
            desc.vs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_MAT4;
            desc.vs.uniform_blocks[0].uniforms[2].array_count = 128;
            desc.vs.uniform_blocks[0].uniforms[3].name = "_19.batch";
            desc.vs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_INT4;
            desc.vs.uniform_blocks[0].uniforms[3].array_count = 128;
            desc.fs.source = (const char*)fs_source_glsl430;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 112;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.uniform_blocks[0].uniforms[0].name = "ShadingUniforms";
            desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 7;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[1].used = true;
            desc.fs.images[1].multisampled = false;
            desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[2].used = true;
            desc.fs.images[2].multisampled = false;
            desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[2].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[3].used = true;
            desc.fs.images[3].multisampled = false;
            desc.fs.images[3].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[4].used = true;
            desc.fs.images[4].multisampled = false;
            desc.fs.images[4].image_type = SG_IMAGETYPE_CUBE;
            desc.fs.images[4].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[5].used = true;
            desc.fs.images[5].multisampled = false;
            desc.fs.images[5].image_type = SG_IMAGETYPE_CUBE;
            desc.fs.images[5].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[6].used = true;
            desc.fs.images[6].multisampled = false;
            desc.fs.images[6].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[6].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[1].used = true;
            desc.fs.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[2].used = true;
            desc.fs.samplers[2].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[3].used = true;
            desc.fs.samplers[3].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[4].used = true;
            desc.fs.samplers[4].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[5].used = true;
            desc.fs.samplers[5].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[6].used = true;
            desc.fs.samplers[6].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[0].glsl_name = "_albedoTexture_albedoTexture_smp";
            desc.fs.image_sampler_pairs[1].used = true;
            desc.fs.image_sampler_pairs[1].image_slot = 1;
            desc.fs.image_sampler_pairs[1].sampler_slot = 1;
            desc.fs.image_sampler_pairs[1].glsl_name = "metalnessTexture_tex_metalnessTexture_smp";
            desc.fs.image_sampler_pairs[2].used = true;
            desc.fs.image_sampler_pairs[2].image_slot = 2;
            desc.fs.image_sampler_pairs[2].sampler_slot = 2;
            desc.fs.image_sampler_pairs[2].glsl_name = "roughnessTexture_tex_roughnessTexture_smp";
            desc.fs.image_sampler_pairs[3].used = true;
            desc.fs.image_sampler_pairs[3].image_slot = 3;
            desc.fs.image_sampler_pairs[3].sampler_slot = 3;
            desc.fs.image_sampler_pairs[3].glsl_name = "normalTexture_tex_normalTexture_smp";
            desc.fs.image_sampler_pairs[4].used = true;
            desc.fs.image_sampler_pairs[4].image_slot = 4;
            desc.fs.image_sampler_pairs[4].sampler_slot = 4;
            desc.fs.image_sampler_pairs[4].glsl_name = "irradianceTexture_tex_irradianceTexture_smp";
            desc.fs.image_sampler_pairs[5].used = true;
            desc.fs.image_sampler_pairs[5].image_slot = 5;
            desc.fs.image_sampler_pairs[5].sampler_slot = 5;
            desc.fs.image_sampler_pairs[5].glsl_name = "specularTexture_tex_specularTexture_smp";
            desc.fs.image_sampler_pairs[6].used = true;
            desc.fs.image_sampler_pairs[6].image_slot = 6;
            desc.fs.image_sampler_pairs[6].sampler_slot = 6;
            desc.fs.image_sampler_pairs[6].glsl_name = "specularBRDF_LUT_tex_specularBRDF_LUT_smp";
            desc.label = "pbr_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].sem_name = "TEXCOORD";
            desc.attrs[0].sem_index = 0;
            desc.attrs[1].sem_name = "TEXCOORD";
            desc.attrs[1].sem_index = 1;
            desc.attrs[2].sem_name = "TEXCOORD";
            desc.attrs[2].sem_index = 2;
            desc.attrs[3].sem_name = "TEXCOORD";
            desc.attrs[3].sem_index = 3;
            desc.attrs[4].sem_name = "TEXCOORD";
            desc.attrs[4].sem_index = 4;
            desc.vs.source = (const char*)vs_source_hlsl5;
            desc.vs.d3d11_target = "vs_5_0";
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 10368;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_source_hlsl5;
            desc.fs.d3d11_target = "ps_5_0";
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 112;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[1].used = true;
            desc.fs.images[1].multisampled = false;
            desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[2].used = true;
            desc.fs.images[2].multisampled = false;
            desc.fs.images[2].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[2].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[3].used = true;
            desc.fs.images[3].multisampled = false;
            desc.fs.images[3].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[4].used = true;
            desc.fs.images[4].multisampled = false;
            desc.fs.images[4].image_type = SG_IMAGETYPE_CUBE;
            desc.fs.images[4].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[5].used = true;
            desc.fs.images[5].multisampled = false;
            desc.fs.images[5].image_type = SG_IMAGETYPE_CUBE;
            desc.fs.images[5].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[6].used = true;
            desc.fs.images[6].multisampled = false;
            desc.fs.images[6].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[6].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[1].used = true;
            desc.fs.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[2].used = true;
            desc.fs.samplers[2].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[3].used = true;
            desc.fs.samplers[3].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[4].used = true;
            desc.fs.samplers[4].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[5].used = true;
            desc.fs.samplers[5].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[6].used = true;
            desc.fs.samplers[6].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[1].used = true;
            desc.fs.image_sampler_pairs[1].image_slot = 1;
            desc.fs.image_sampler_pairs[1].sampler_slot = 1;
            desc.fs.image_sampler_pairs[2].used = true;
            desc.fs.image_sampler_pairs[2].image_slot = 2;
            desc.fs.image_sampler_pairs[2].sampler_slot = 2;
            desc.fs.image_sampler_pairs[3].used = true;
            desc.fs.image_sampler_pairs[3].image_slot = 3;
            desc.fs.image_sampler_pairs[3].sampler_slot = 3;
            desc.fs.image_sampler_pairs[4].used = true;
            desc.fs.image_sampler_pairs[4].image_slot = 4;
            desc.fs.image_sampler_pairs[4].sampler_slot = 4;
            desc.fs.image_sampler_pairs[5].used = true;
            desc.fs.image_sampler_pairs[5].image_slot = 5;
            desc.fs.image_sampler_pairs[5].sampler_slot = 5;
            desc.fs.image_sampler_pairs[6].used = true;
            desc.fs.image_sampler_pairs[6].image_slot = 6;
            desc.fs.image_sampler_pairs[6].sampler_slot = 6;
            desc.label = "pbr_shader";
        }
        return &desc;
    }
    return 0;
}
